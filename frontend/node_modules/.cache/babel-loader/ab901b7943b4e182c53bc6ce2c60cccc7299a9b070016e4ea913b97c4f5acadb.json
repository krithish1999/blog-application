{"ast":null,"code":"var _jsxFileName = \"/Users/krithishgoli/Documents/blogApplication/frontend/src/pages/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Dashboard() {\n  _s();\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    async function fetchPosts() {\n      try {\n        const response = await axios.get('http://localhost:5001/api/posts');\n        setPosts(response.data);\n      } catch (error) {\n        console.error('Error fetching posts:', error);\n      }\n    }\n    fetchPosts();\n  }, []);\n  const renderImage = imageData => {\n    if (!imageData) return null;\n\n    // Convert bytea data to base64\n    const base64String = btoa(String.fromCharCode.apply(null, new Uint8Array(imageData)));\n    console.log(base64String);\n    return `data:image/jpeg;base64,${base64String}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this), posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: post.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this), post.image && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: renderImage(post.image),\n        alt: \"Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 15\n      }, this)]\n    }, post.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 7\n  }, this);\n}\n_s(Dashboard, \"bG8V4duoIfO0BEPgauWMVT5Qvyw=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Dashboard","_s","posts","setPosts","fetchPosts","response","get","data","error","console","renderImage","imageData","base64String","btoa","String","fromCharCode","apply","Uint8Array","log","children","fileName","_jsxFileName","lineNumber","columnNumber","map","post","title","content","image","src","alt","id","_c","$RefreshReg$"],"sources":["/Users/krithishgoli/Documents/blogApplication/frontend/src/pages/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nfunction Dashboard() {\n    const [posts, setPosts] = useState([]);\n\n    useEffect(() => {\n        async function fetchPosts() {\n            try {\n            const response = await axios.get('http://localhost:5001/api/posts');\n            setPosts(response.data);\n            } catch (error) {\n            console.error('Error fetching posts:', error);\n            }\n        }\n      fetchPosts();\n    }, []);\n\n    const renderImage = (imageData) => {\n        if (!imageData) return null;\n    \n        // Convert bytea data to base64\n        const base64String = btoa(String.fromCharCode.apply(null, new Uint8Array(imageData)));\n        console.log(base64String)\n        return `data:image/jpeg;base64,${base64String}`;\n      };\n  \n    return (\n      <div>\n        <h2>Posts</h2>\n        {posts.map(post => (\n          <div key={post.id}>\n            <h3>{post.title}</h3>\n            <p>{post.content}</p>\n            {post.image && (\n              <img src={renderImage(post.image)} alt=\"Post\" />\n            )}\n          </div>\n        ))}\n      </div>\n    );\n  \n}\n\nexport default Dashboard;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACjB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACZ,eAAeQ,UAAUA,CAAA,EAAG;MACxB,IAAI;QACJ,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAC,iCAAiC,CAAC;QACnEH,QAAQ,CAACE,QAAQ,CAACE,IAAI,CAAC;MACvB,CAAC,CAAC,OAAOC,KAAK,EAAE;QAChBC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7C;IACJ;IACFJ,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMM,WAAW,GAAIC,SAAS,IAAK;IAC/B,IAAI,CAACA,SAAS,EAAE,OAAO,IAAI;;IAE3B;IACA,MAAMC,YAAY,GAAGC,IAAI,CAACC,MAAM,CAACC,YAAY,CAACC,KAAK,CAAC,IAAI,EAAE,IAAIC,UAAU,CAACN,SAAS,CAAC,CAAC,CAAC;IACrFF,OAAO,CAACS,GAAG,CAACN,YAAY,CAAC;IACzB,OAAQ,0BAAyBA,YAAa,EAAC;EACjD,CAAC;EAEH,oBACEb,OAAA;IAAAoB,QAAA,gBACEpB,OAAA;MAAAoB,QAAA,EAAI;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACbrB,KAAK,CAACsB,GAAG,CAACC,IAAI,iBACb1B,OAAA;MAAAoB,QAAA,gBACEpB,OAAA;QAAAoB,QAAA,EAAKM,IAAI,CAACC;MAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACrBxB,OAAA;QAAAoB,QAAA,EAAIM,IAAI,CAACE;MAAO;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EACpBE,IAAI,CAACG,KAAK,iBACT7B,OAAA;QAAK8B,GAAG,EAAEnB,WAAW,CAACe,IAAI,CAACG,KAAK,CAAE;QAACE,GAAG,EAAC;MAAM;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAChD;IAAA,GALOE,IAAI,CAACM,EAAE;MAAAX,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAMZ,CACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAGZ;AAACtB,EAAA,CAvCQD,SAAS;AAAAgC,EAAA,GAAThC,SAAS;AAyClB,eAAeA,SAAS;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}