{"ast":null,"code":"var _jsxFileName = \"/Users/krithishgoli/Documents/blogApplication/frontend/src/pages/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Dashboard() {\n  _s();\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    async function fetchPosts() {\n      try {\n        const response = await axios.get('http://localhost:5001/api/posts');\n        setPosts(response.data);\n      } catch (error) {\n        console.error('Error fetching posts:', error);\n      }\n    }\n    fetchPosts();\n  }, []);\n  const resizeImage = imageData => {\n    const canvas = document.createElement('canvas');\n    const ctx = canvas.getContext('2d');\n    const img = new Image();\n    img.src = `http://localhost:5000/${imageData}`;\n    img.onload = () => {\n      const MAX_WIDTH = 200; // Define your desired maximum width\n      const MAX_HEIGHT = 200; // Define your desired maximum height\n      let width = img.width;\n      let height = img.height;\n      if (width > height) {\n        if (width > MAX_WIDTH) {\n          height *= MAX_WIDTH / width;\n          width = MAX_WIDTH;\n        }\n      } else {\n        if (height > MAX_HEIGHT) {\n          width *= MAX_HEIGHT / height;\n          height = MAX_HEIGHT;\n        }\n      }\n      canvas.width = width;\n      canvas.height = height;\n      ctx.drawImage(img, 0, 0, width, height);\n\n      // Convert canvas to data URL\n      const resizedImageData = canvas.toDataURL('image/jpeg');\n\n      // Return the resized image data URL\n      return resizedImageData;\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this), posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: post.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: post.image_path\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this), post.image_path && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: `http://localhost:5001/${post.image_path}`,\n        alt: \"Post Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this)]\n    }, post.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 7\n  }, this);\n}\n_s(Dashboard, \"bG8V4duoIfO0BEPgauWMVT5Qvyw=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Dashboard","_s","posts","setPosts","fetchPosts","response","get","data","error","console","resizeImage","imageData","canvas","document","createElement","ctx","getContext","img","Image","src","onload","MAX_WIDTH","MAX_HEIGHT","width","height","drawImage","resizedImageData","toDataURL","children","fileName","_jsxFileName","lineNumber","columnNumber","map","post","title","content","image_path","alt","id","_c","$RefreshReg$"],"sources":["/Users/krithishgoli/Documents/blogApplication/frontend/src/pages/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nfunction Dashboard() {\n    const [posts, setPosts] = useState([]);\n\n    useEffect(() => {\n        async function fetchPosts() {\n            try {\n            const response = await axios.get('http://localhost:5001/api/posts');\n            setPosts(response.data);\n            } catch (error) {\n            console.error('Error fetching posts:', error);\n            }\n        }\n      fetchPosts();\n    }, []);\n\n    const resizeImage = (imageData) => {\n        const canvas = document.createElement('canvas');\n        const ctx = canvas.getContext('2d');\n        const img = new Image();\n    \n        img.src = `http://localhost:5000/${imageData}`;\n        img.onload = () => {\n          const MAX_WIDTH = 200; // Define your desired maximum width\n          const MAX_HEIGHT = 200; // Define your desired maximum height\n          let width = img.width;\n          let height = img.height;\n    \n          if (width > height) {\n            if (width > MAX_WIDTH) {\n              height *= MAX_WIDTH / width;\n              width = MAX_WIDTH;\n            }\n          } else {\n            if (height > MAX_HEIGHT) {\n              width *= MAX_HEIGHT / height;\n              height = MAX_HEIGHT;\n            }\n          }\n    \n          canvas.width = width;\n          canvas.height = height;\n    \n          ctx.drawImage(img, 0, 0, width, height);\n    \n          // Convert canvas to data URL\n          const resizedImageData = canvas.toDataURL('image/jpeg');\n    \n          // Return the resized image data URL\n          return resizedImageData;\n        };\n      };\n  \n    return (\n      <div>\n        <h2>Posts</h2>\n        {posts.map(post => (\n          <div key={post.id}>\n            <h3>{post.title}</h3>\n            <p>{post.content}</p>\n            <p>{post.image_path}</p>\n            {post.image_path && (\n            <img src={`http://localhost:5001/${post.image_path}`} alt=\"Post Image\" />\n          )}\n          </div>\n        ))}\n      </div>\n    );\n  \n}\n\nexport default Dashboard;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACjB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACZ,eAAeQ,UAAUA,CAAA,EAAG;MACxB,IAAI;QACJ,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAC,iCAAiC,CAAC;QACnEH,QAAQ,CAACE,QAAQ,CAACE,IAAI,CAAC;MACvB,CAAC,CAAC,OAAOC,KAAK,EAAE;QAChBC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7C;IACJ;IACFJ,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMM,WAAW,GAAIC,SAAS,IAAK;IAC/B,MAAMC,MAAM,GAAGC,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;IAC/C,MAAMC,GAAG,GAAGH,MAAM,CAACI,UAAU,CAAC,IAAI,CAAC;IACnC,MAAMC,GAAG,GAAG,IAAIC,KAAK,CAAC,CAAC;IAEvBD,GAAG,CAACE,GAAG,GAAI,yBAAwBR,SAAU,EAAC;IAC9CM,GAAG,CAACG,MAAM,GAAG,MAAM;MACjB,MAAMC,SAAS,GAAG,GAAG,CAAC,CAAC;MACvB,MAAMC,UAAU,GAAG,GAAG,CAAC,CAAC;MACxB,IAAIC,KAAK,GAAGN,GAAG,CAACM,KAAK;MACrB,IAAIC,MAAM,GAAGP,GAAG,CAACO,MAAM;MAEvB,IAAID,KAAK,GAAGC,MAAM,EAAE;QAClB,IAAID,KAAK,GAAGF,SAAS,EAAE;UACrBG,MAAM,IAAIH,SAAS,GAAGE,KAAK;UAC3BA,KAAK,GAAGF,SAAS;QACnB;MACF,CAAC,MAAM;QACL,IAAIG,MAAM,GAAGF,UAAU,EAAE;UACvBC,KAAK,IAAID,UAAU,GAAGE,MAAM;UAC5BA,MAAM,GAAGF,UAAU;QACrB;MACF;MAEAV,MAAM,CAACW,KAAK,GAAGA,KAAK;MACpBX,MAAM,CAACY,MAAM,GAAGA,MAAM;MAEtBT,GAAG,CAACU,SAAS,CAACR,GAAG,EAAE,CAAC,EAAE,CAAC,EAAEM,KAAK,EAAEC,MAAM,CAAC;;MAEvC;MACA,MAAME,gBAAgB,GAAGd,MAAM,CAACe,SAAS,CAAC,YAAY,CAAC;;MAEvD;MACA,OAAOD,gBAAgB;IACzB,CAAC;EACH,CAAC;EAEH,oBACE3B,OAAA;IAAA6B,QAAA,gBACE7B,OAAA;MAAA6B,QAAA,EAAI;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACb9B,KAAK,CAAC+B,GAAG,CAACC,IAAI,iBACbnC,OAAA;MAAA6B,QAAA,gBACE7B,OAAA;QAAA6B,QAAA,EAAKM,IAAI,CAACC;MAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACrBjC,OAAA;QAAA6B,QAAA,EAAIM,IAAI,CAACE;MAAO;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACrBjC,OAAA;QAAA6B,QAAA,EAAIM,IAAI,CAACG;MAAU;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EACvBE,IAAI,CAACG,UAAU,iBAChBtC,OAAA;QAAKoB,GAAG,EAAG,yBAAwBe,IAAI,CAACG,UAAW,EAAE;QAACC,GAAG,EAAC;MAAY;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CACzE;IAAA,GANSE,IAAI,CAACK,EAAE;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAOZ,CACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAGZ;AAAC/B,EAAA,CApEQD,SAAS;AAAAwC,EAAA,GAATxC,SAAS;AAsElB,eAAeA,SAAS;AAAC,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}